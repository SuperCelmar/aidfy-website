@tailwind base;
@tailwind components;
@tailwind utilities;

/* You can add CSS-first customizations here using @theme if needed */
/* For example, if you had custom colors in tailwind.config.ts: */
/* @theme { */
/*   --color-primary: #2563EB; */
/*   --color-lightBg: #F9FAFB; */
/* } */

@layer base {
  :root {
    /* --gradient-color: #8350e8; */ /* Example color from demo - can be changed to brand primary */
    /* --sparkles-color: #8350e8; */ /* Example color from demo - can be changed to brand primary or white */
    --gradient-color: #334155; /* Your brand primary */
    --sparkles-color: #334155; /* Your brand primary */
  }

  /* If you implement a dark theme later with next-themes */
  /* .dark { */
  /*   --gradient-color: #2563EB; */ /* Adjust if needed for dark theme */
  /*   --sparkles-color: #ffffff; */ /* Sparkles might be white on dark theme */
  /* } */
}

/* Line clamp utilities */
.line-clamp-2 {
  display: -webkit-box;
  -webkit-line-clamp: 2;
  -webkit-box-orient: vertical;
  overflow: hidden;
}

.line-clamp-3 {
  display: -webkit-box;
  -webkit-line-clamp: 3;
  -webkit-box-orient: vertical;
  overflow: hidden;
}

/* Syntax highlighting theme - works in both light and dark modes */

/* Light mode token colors */
.token.comment,
.token.prolog,
.token.cdata {
  color: #6b7280; /* gray-500 */
  font-style: italic;
}

.dark .token.comment,
.dark .token.prolog,
.dark .token.cdata {
  color: #6a9955;
  font-style: italic;
}

.token.punctuation {
  color: #4b5563; /* gray-600 */
}

.dark .token.punctuation {
  color: #d4d4d4;
}

.token.property,
.token.tag,
.token.boolean,
.token.number,
.token.constant,
.token.symbol,
.token.deleted {
  color: #059669; /* emerald-600 */
}

.dark .token.property,
.dark .token.tag,
.dark .token.boolean,
.dark .token.number,
.dark .token.constant,
.dark .token.symbol,
.dark .token.deleted {
  color: #b5cea8;
}

.token.selector,
.token.attr-name,
.token.string,
.token.char,
.token.builtin,
.token.inserted {
  color: #dc2626; /* red-600 */
}

.dark .token.selector,
.dark .token.attr-name,
.dark .token.string,
.dark .token.char,
.dark .token.builtin,
.dark .token.inserted {
  color: #ce9178;
}

.token.operator,
.token.entity,
.token.url,
.language-css .token.string,
.style .token.string {
  color: #374151; /* gray-700 */
}

.dark .token.operator,
.dark .token.entity,
.dark .token.url,
.dark .language-css .token.string,
.dark .style .token.string {
  color: #d4d4d4;
}

.token.atrule,
.token.attr-value,
.token.keyword {
  color: #2563eb; /* blue-600 */
  font-weight: 600;
}

.dark .token.atrule,
.dark .token.attr-value,
.dark .token.keyword {
  color: #569cd6;
}

.token.function,
.token.class-name {
  color: #7c3aed; /* violet-600 */
  font-weight: 500;
}

.dark .token.function,
.dark .token.class-name {
  color: #dcdcaa;
}

.token.regex,
.token.important,
.token.variable {
  color: #dc2626; /* red-600 */
}

.dark .token.regex,
.dark .token.important,
.dark .token.variable {
  color: #d16969;
}

.token.important,
.token.bold {
  font-weight: bold;
}

.token.italic {
  font-style: italic;
}

.token.entity {
  cursor: help;
}

/* Additional tokens for better highlighting */
.token.namespace {
  opacity: 0.7;
}

/* TypeScript specific tokens */
.token.type {
  color: #059669; /* emerald-600 */
}

.dark .token.type {
  color: #4ec9b0;
}

/* JSON specific tokens */
.language-json .token.property {
  color: #2563eb; /* blue-600 */
}

.dark .language-json .token.property {
  color: #9cdcfe;
}

/* SQL specific tokens */
.language-sql .token.keyword {
  color: #2563eb; /* blue-600 */
  text-transform: uppercase;
  font-weight: 600;
}

.dark .language-sql .token.keyword {
  color: #569cd6;
}

/* Line numbers support */
.line-numbers {
  position: relative;
  padding-left: 3.8em;
  counter-reset: linenumber;
}

.line-numbers > code {
  position: relative;
  white-space: inherit;
}

.line-numbers .line-numbers-rows {
  position: absolute;
  pointer-events: none;
  top: 0;
  font-size: 100%;
  left: -3.8em;
  width: 3em;
  letter-spacing: -1px;
  border-right: 1px solid #999;
  user-select: none;
}

.line-numbers-rows > span {
  display: block;
  counter-increment: linenumber;
}

.line-numbers-rows > span:before {
  content: counter(linenumber);
  color: #999;
  display: block;
  padding-right: 0.8em;
  text-align: right;
} 